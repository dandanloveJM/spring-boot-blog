<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.mybatis.example.ProjectMapper">
    <select id="selectProjects" resultMap="project" >
        select
        project.id,
        project.process_id,
        project.name,
        project.number,
        project.type,
        project.attachment,
        project.owner_id,
        project.product_id,
        project.created_at,
        project.updated_at
        FROM project
        <if test="userId != null">
            WHERE project.owner_id = #{userId}
        </if>
        order by project.updated_at desc
        limit ${offset}, #{limit}
    </select>
    <select id="countProject" resultType="int">
        select count(*) from project
        <if test="userId != null">
            WHERE owner_id = ${userId}
        </if>
    </select>
    <select id="getProjectById" resultMap="project">
        SELECT
        project.id,
        project.process_id,
        project.name,
        project.number,
        project.type,
        project.attachment,
        project.owner_id,
        project.product_id,
        project.created_at,
        project.updated_at
        FROM project
        where project.id = ${projectId}
    </select>

    <select id="getProjectByProcessId" parameterType="String" resultMap="project">
            SELECT
            project.id,
            project.process_id,
            project.name,
            project.number,
            project.type,
            project.attachment,
            project.owner_id,
            project.product_id,
            project.created_at,
            project.updated_at
            FROM project
            where project.process_id = #{processId}
        </select>

    <insert id="insertProject" parameterType="hello.entity.Project" useGeneratedKeys="true"
            keyProperty="id" keyColumn="id">
        INSERT INTO project (process_id, name, number, type, attachment, owner_id, product_id, created_at, updated_at )
        VALUES (#{processId}, #{name}, #{number}, #{type}, #{attachment}, #{ownerId}, #{productId}, now(), now())
    </insert>

    <update id="updateProject" parameterType="hello.entity.Project">
        UPDATE project
        SET name=${name}, number=${number}, type=${type}, attachment=${attachment}, updated_at=now()
        where project.id = #{id}
    </update>

    <delete id="deleteProject" parameterType="int">
        DELETE
        FROM project
        WHERE project.id = #{id}
    </delete>

    <delete id="deleteProjectByProcessId" parameterType="String">
        DELETE
        FROM project
        WHERE project.process_id = #{processId}
    </delete>


    <resultMap id="project" type="hello.entity.Project">
        <id property="id" column="id"/>
        <result property="processId" column="process_id"/>
        <result property="name" column="name"/>
        <result property="number" column="number"/>
        <result property="type" column="type"/>
        <result property="attachment" column="attachment"/>
        <result property="ownerId" column="owner_id"/>
        <result property="productId" column="product_id"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>
</mapper>